#+title: X configuration
#+property: header-args  :mkdirp yes
#+property: header-args+ :tangle-mode (identity #o644)
#+property: header-args+ :noweb yes
#+property: header-args+ :padline no

*Xresources* is a user-level configuration dotfile, typically located at =~/.Xresources=. It can be used to set the configuration parameters for X client applications like:
- configure terminal preferences (e.g. terminal colors)
- set DPI, anti-aliasing, hinting and other X font settings
- change the Xcursor theme
- theme *XScreenSaver*
- configure low-level X applications like: =xorg-xclock=, =xpdf=, =xterm=.

you can set/add/update using the command [[https://www.x.org/archive/X11R7.5/doc/man/man1/xrdb.1.html][xrdb]] to:
1. Load a resource file (such as the conventional .Xresources), replacing any current settings:
   #+begin_src shell
   $ xrdb ~/.Xresources
   #+end_src
2. Load a resource file, and merge with the current settings:
   #+begin_src shell
   $ xrdb -merge ~/.Xresources
   #+end_src

Then, you can actually separate the resources in different files, and load them separately.
Here you can define your own font and sizes. Since some configuration is computer-dependent, I keep any additional configuration can be done in the file =~/.Xresources_custom=, which is (manually) loaded during the initialization of X and not kept under version control.

* Xterm configuration
:properties:
:header-args+: :tangle "xresources/.Xresources.d/xterm"
:end:

=xterm= is the standard terminal emulator for the X Window System. It is highly configurable and has many useful features, although the defaults make it look like crap. Here is some configuration to make it behave in a more pleasant way.

** Font sizes

The sizes defined here are used when resizing the font, either from the menu or from the keyboard keybinding.

*** VT Font Menu: Unreadable

#+begin_src conf
xterm*faceSize1: 7
#+end_src

*** VT font menu: Tiny

#+begin_src conf
xterm*faceSize2: 10
#+end_src

*** VT font menu: Medium

#+begin_src conf
xterm*faceSize3: 13
#+end_src

*** VT font menu: Large

#+begin_src conf
xterm*faceSize4: 16
#+end_src

*** VT font menu: Huge

#+begin_src conf
xterm*faceSize5: 20
#+end_src

** Set locale

Force xterm to more strictly follow your locale:
#+begin_src conf
XTerm.vt100.locale: true
#+end_src

** Make every shell a login shell by default

This enables the inclusion of all environment variables

#+begin_src conf
XTerm*loginShell: true
#+end_src

** Enable TrueType fonts

#+begin_src conf
XTerm*renderFont: true
#+end_src

** Disable bold font emulation

I dislike bold faces, they look too visually noisy

#+begin_src conf
XTerm*boldMode: false
#+end_src

** Specifies the terminal type name

To be set in the =TERM= environment variable.

#+begin_src conf
xterm.termName: xterm-256color
#+end_src

** Disable audio bell

I *HATE* the audio bell. I like the visual bell much more!
#+begin_src conf
XTerm*visualBell: true
#+end_src

** Key bindings
*** Change fontsize

Since I'm constantly changing the font size, it's interesting to change the font size using the keyboard. I've got a nice solution [[https://blog.rot13.org/2010/03/change-font-size-in-xterm-using-keyboard.html][here]].
#+begin_src conf
XTerm.VT100.translations: #override \
      Ctrl Shift <Key> minus: smaller-vt-font() \n\
      Ctrl Shift <Key> plus: larger-vt-font() \n\
      Ctrl Shift <Key> KP_Subtract: smaller-vt-font() \n\
      Ctrl Shift <Key> KP_Add: larger-vt-font() \n
#+end_src

*** Copy/Paste

I put some keybindings to copy/paste in the terminal in a way similar to konsole:

#+begin_src conf
XTerm*VT100.Translations: #override \
      Shift Ctrl <Key> C: copy-selection(CLIPBOARD) \n\
      Shift Ctrl <Key>V: insert-selection(CLIPBOARD) \n\
      Shift<Btn1Down>: select-start() \n\
      Shift<Btn1Motion>: select-extend() \n\
      Shift<Btn1Up>: select-end(CLIPBOARD)
XTerm*selectToClipboard: true
#+end_src

** Change colors

The default colors are worth changing too!
#+begin_src conf
xterm*foreground: #cfcfc2
xterm*background: #232629
#+end_src

** Make XTerm recognize escape sequence to change colors

#+begin_src conf
xterm*dynamicColors: true
#+end_src

** Make 'Alt' key behave as on other terminal emulators

The default =Alt= key behavior in xterm is a modifier to send eight bit input characters e.g. to insert =Ã¦= by pressing =Alt+f=. To make =Alt= instead send a =^[= (escape) key (as in gnome-terminal and konsole), set

#+begin_src conf
XTerm*metaSendsEscape: true
#+end_src

** Text selection

#+begin_src conf
XTerm*highlightSelection: false
XTerm*trimSelection: true
#+end_src

** Cause the scrollbar to not go to the bottom of the scrolling region

#+begin_src conf
XTerm*scrollTtyOutput: false
#+end_src

* Emacs configuration
:properties:
:header-args+: :tangle "xresources/.Xresources.d/emacs"
:end:

This has use only in stacking windows managers, to prevent the window appears too large. This used to happen when I set the default font size within emacs. I don't really understand why yet!

#+begin_src conf
emacs.geometry: 100x40
#+end_src

* XScreensaver configuration
:properties:
:header-args+: :tangle "xresources/.Xresources.d/xscreensaver"
:end:

#+begin_src conf
! font settings
xscreensaver.Dialog.headingFont: -*-helvetica-medium-r-*-*-17-*-*-*-*-*-*-*
xscreensaver.Dialog.bodyFont:    -*-helvetica-medium-r-*-*-17-*-*-*-*-*-*-*
xscreensaver.Dialog.labelFont:   -*-helvetica-medium-r-*-*-17-*-*-*-*-*-*-*
xscreensaver.Dialog.unameFont:   -*-helvetica-medium-r-*-*-17-*-*-*-*-*-*-*
xscreensaver.Dialog.buttonFont:  -*-helvetica-medium-r-*-*-17-*-*-*-*-*-*-*
xscreensaver.Dialog.dateFont:    -*-helvetica-medium-r-*-*-14-*-*-*-*-*-*-*
xscreensaver.passwd.passwdFont:  -*-helvetica-medium-r-*-*-17-*-*-*-*-*-*-*
#+end_src
