#+title: Readline configuration
#+property: header-args  :mkdirp yes
#+property: header-args+ :tangle-mode (identity #o444)
#+property: header-args+ :noweb yes
#+property: header-args+ :padline no
#+property: header-args+ :tangle "readline/.inputrc"

[[https://cnswww.cns.cwru.edu/php/chet/readline/rltop.html][GNU Readline]] is a library used by many programs for interactive command editing and recall. Most importantly for my purposes, it is used by Bash, so this could be considered as an extension of our [[*Shell][shell configuration]].

Although the Readline library comes with a set of default keybindings, it is possible to modify these by putting commands into a =.inputrc= file, typically in the home directory. The name of this file is taken from the value of the shell variable =INPUTRC=. If that variable is unset, the default is =$HOME/.inputrc= If that file does not exist or cannot be read, the ultimate default is =/etc/inputrc=.

The configuration options in =.inputrc= are particularly useful for customising the way Tab-completion works, e.g. with the =ls= command 

Let's start off by moving the configuration to the correct XDG Basedir by adding this to the =xdg= script we detail in the [[*XDG Base Directories][XDG Basedirs section]].

#+begin_src bash :noweb-ref shell-xdg :noweb-sep "\n"
# export INPUTRC="$XDG_CONFIG_HOME/readline/inputrc"
#+end_src

The actual =$XDG_CONFIG_HOME/readline/inputrc= file is shown and described below:

#+caption: Source listing for ~.config/readline/inputrc~.
#+begin_src conf :tangle shell/.config/readline/inputrc :noweb yes :mkdirp yes
$include /etc/inputrc # Include default configuration
<<inputrc>>
#+end_src

Our first configuration is to make =TAB= autocomplete regardless of the case of the input. This is somewhat of a trade-off, because it gives worse completion when the case of a prefix really does disambiguate. I find, in practice, this is rather rare, and even rarer in my primary Readline application, Bash.
#+begin_src conf :noweb-ref inputrc :noweb-sep "\n"
set completion-ignore-case On
#+end_src

I find the default behavior of Readline with regard to ambiguous completion to be very annoying. By default, Readline will beep at you when you attempt to complete an ambiguous prefix and wait for you to press =TAB= again to see the alternatives; if the completion is ambiguous, I want to be told of the possible alternatives immediately. Enabling the =show-all-if-ambiguous= setting accomplishes this.
#+begin_src conf :noweb-ref inputrc :noweb-sep "\n"
set show-all-if-ambiguous On
#+end_src

Another setting we want to make sure is set is to not autocomplete hidden files unless the pattern explicitly begins with a dot. Usually I don't want to deal with hidden files, so this is a good trade-off.
#+begin_src conf :noweb-ref inputrc :noweb-sep "\n"
set match-hidden-files Off
#+end_src

Also, we want to normalize the handling of directories and symlinks to directories, so there appears to be no difference. The following setting immediately adds a trailing slash when autocompleting symlinks to directories.
#+BEGIN_SRC conf :noweb-ref inputrc :noweb-sep "\n"
set mark-symlinked-directories On
#+END_SRC

Here I add more intelligent =UP=/=DOWN= behavior, using the text that has already been typed as the prefix for searching through command history.
#+begin_src conf :noweb-ref inputrc :noweb-sep "\n"
"\C-n": history-search-forward
"\C-p": history-search-backward
# Ensure that Left-Right arrows keep working correctly
"\e[C": forward-char
"\e[D": backward-char
#+end_src

This enhance menu completion
#+begin_src conf :noweb-ref inputrc :noweb-sep "\n"
Tab: menu-complete
"\e[Z": menu-complete-backward
#+end_src

#+begin_src conf :noweb-ref inputrc :noweb-sep "\n"
set colored-stats On
set visible-stats On
set menu-complete-display-prefix On
#+end_src
