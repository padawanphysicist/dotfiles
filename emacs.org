#+title: Emacs configuration
#+property: header-args+ :shebang ";; -*- mode: emacs-lisp -*-"


[[https://www.gnu.org/software/emacs/][GNU Emacs]] is an extensible, customizable, [[https://www.gnu.org/philosophy/free-sw.html][free/libre]] text editor. It is an interpreter for Emacs Lisp, a dialect of the Lisp programming language with extensions to support text editing.

* Init file
:properties:
:header-args:  :tangle "emacs/.emacs"
:header-args+: :mkdirp yes
:header-args+: :shebang ";; -*- mode: emacs-lisp -*-"
:end:

The init file contains personal Emacs-Lisp code that you want to execute when you start Emacs.

** Sane defaults
*** Personal Information

 #+begin_src emacs-lisp
(setq user-full-name "Victor Santos"
      user-mail-address "victor_santos@fisica.ufc.br")
 #+end_src

*** Disable menu-bar, tool-bar, and scroll-bar

 #+begin_src emacs-lisp
(if (fboundp 'menu-bar-mode)
    (menu-bar-mode -1))
(if (fboundp 'tool-bar-mode)
    (tool-bar-mode -1))
(if (fboundp 'scroll-bar-mode)
    (scroll-bar-mode -1))
 #+end_src

*** Cursor style

 I like the cursor similar to other text editors.

 #+begin_src emacs-lisp
(setq-default cursor-type 'bar)
 #+end_src

*** Disable startup screen

 #+begin_src emacs-lisp
(setq inhibit-startup-screen t)
 #+end_src

*** Show matching brackets

 =[[https://www.emacswiki.org/emacs/ShowParenMode][show-paren-mode]]= allows one to see matching pairs of parentheses and other characters. 
 #+begin_src emacs-lisp
(show-paren-mode 1)
 #+end_src

 By default, thereâ€™s a small delay before showing a matching parenthesis. It can be deactivated with the following:
 #+begin_src emacs-lisp
(setq show-paren-delay 0)
 #+end_src

*** Disable bell sound

 #+begin_src emacs-lisp
(setq ring-bell-function 'ignore)
 #+end_src

*** Set up *scratch* buffer

 #+begin_src emacs-lisp
(setq initial-scratch-message ";; Excuse me sir, do you have a moment to talk about our\n;; Lord, Savior, and the one true operating system, EMACS?")
 #+end_src

*** Change "yes or no" to "y or n"

 Lazy people like me never want to type "yes" when "y" will suffice.

 #+begin_src emacs-lisp
(fset 'yes-or-no-p 'y-or-n-p)
 #+end_src

*** Change backup behaviour

 This is one of the things people usually want to change right away. By default, Emacs saves backup files in the current directory. These are the files ending in =~= that are cluttering up your directory lists. The following code stashes them all in =~/.emacs.d/backups=, where I can find them with =C-x C-f= (=find-file=) if I really need to.

 #+begin_src emacs-lisp
;; Don't litter my filesystem tree
(setq backup-directory-alist '(("." . "~/.emacs.d/backups/")))
 #+end_src

 Since disk space is cheap, I prefer to save a lot!
 #+begin_src emacs-lisp
(setq backup-by-copying t) ;; don't clobber symlinks
(setq delete-old-versions t)
(setq kept-new-versions 8)
(setq kept-old-versions 4)
(setq version-control t)
 #+end_src

*** Package management
**** Setup =package.el=

 Modified from https://melpa.org/#/getting-started:
 #+begin_src emacs-lisp
(require 'package)
(setq package-enable-at-startup nil) ;; Do not activate installed packages when Emacs starts
(let* ((no-ssl (and (memq system-type '(windows-nt ms-dos))
                    (not (gnutls-available-p))))
       (proto (if no-ssl "http" "https")))
  (when no-ssl
    (warn "\
Your version of Emacs does not support SSL connections,
which is unsafe because it allows man-in-the-middle attacks.
There are two things you can do about this warning:
1. Install an Emacs version that does support SSL and be safe.
2. Remove this warning from your init file so you won't see it again."))
  (add-to-list 'package-archives (cons "melpa" (concat proto "://melpa.org/packages/")) t)
  (add-to-list 'package-archives (cons "org" (concat proto "://orgmode.org/elpa/")) t)
  (when (< emacs-major-version 24)
    ;; For important compatibility libraries like cl-lib
    (add-to-list 'package-archives (cons "gnu" (concat proto "://elpa.gnu.org/packages/")))))
(unless package--initialized (package-initialize))
 #+end_src

**** Setup =use-package=

 [[https://jwiegley.github.io/use-package][use-package]] allows to isolate configuration 

 #+begin_src emacs-lisp
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))
(eval-when-compile
  (require 'use-package))

;; Causes all packages to be installed automatically if not already
;; present in the system
(setq use-package-always-ensure t)
 #+end_src

*** Load custom configuration

 Offload the custom-set-variables to a separate file. This keeps your init.el neater and you have the option to gitignore your custom.el if you see fit.

 #+begin_src emacs-lisp
(setq custom-file "~/.emacs.d/custom.el")
(unless (file-exists-p custom-file)
  (write-region "" nil custom-file))

;;; Load custom file. Don't hide errors. Hide success message
(load custom-file nil t)
 #+end_src

** Theme

I like light on dark because I find it to be more restful. I find hard a theme which works both on GUI and terminal, but so far [[https://github.com/nashamri/spacemacs-theme][Spacemacs theme]] seems to be a nice choice.
#+begin_src emacs-lisp
(use-package spacemacs-theme
  :defer t
  :init
  (load-theme 'spacemacs-dark t))
#+end_src
